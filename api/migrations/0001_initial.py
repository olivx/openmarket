# Generated by Django 3.2.6 on 2021-08-08 21:41

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=18)),
                ("district_code", models.CharField(max_length=9, unique=True)),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Neighborhood",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, unique=True)),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="OpenMarket",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("register", models.CharField(max_length=6, unique=True)),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("sector", models.CharField(max_length=15)),
                ("area", models.CharField(max_length=13)),
                ("public_place", models.CharField(max_length=34)),
                ("number", models.CharField(blank=True, default="", max_length=5)),
                ("ref", models.CharField(max_length=24)),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=6, unique=True)),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="SubCityHall",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25)),
                ("cod_sub_city_hall", models.CharField(max_length=2, unique=True)),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="SubRegion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=7)),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_regions",
                        to="api.region",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.AddIndex(
            model_name="region",
            index=models.Index(fields=["name"], name="region_name_idx"),
        ),
        migrations.AddField(
            model_name="openmarket",
            name="district",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="open_markets",
                to="api.district",
            ),
        ),
        migrations.AddField(
            model_name="openmarket",
            name="neighborhood",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="neighborhood",
                to="api.neighborhood",
            ),
        ),
        migrations.AddField(
            model_name="openmarket",
            name="sub_city_hall",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="open_markets",
                to="api.subcityhall",
            ),
        ),
        migrations.AddField(
            model_name="openmarket",
            name="sub_region",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="open_markets",
                to="api.subregion",
            ),
        ),
        migrations.AddIndex(
            model_name="neighborhood",
            index=models.Index(fields=["name"], name="neighborhood_name_idx"),
        ),
        migrations.AddIndex(
            model_name="district",
            index=models.Index(fields=["name"], name="district_name_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="subregion",
            unique_together={("name", "region")},
        ),
        migrations.AddIndex(
            model_name="openmarket",
            index=models.Index(fields=["name"], name="open_market_name_idx"),
        ),
    ]
